#   scale_color_manual(values=c(rep('#F69388',5),'#DF3D15'), guide ='none') +
#   scale_fill_manual(values=c(rep('#F69388',5),'#DF3D15'), guide ='none')
}
return(ez)
} #Grafica fila 1
GrafCasosDepa2 <- function(x, name_depar, semanax = semana) {
# x<- data_zoo
# name_depar <- lis_dep
# semanax = semana
#x <- data_zoo
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P',
ano >= (ano_actual-3),
departamento == name_depar) %>%
group_by(ano, semana) %>%
count(semana) %>%
mutate(ano = as.character(ano))
complet1 <- data.frame(ano= rep((ano_actual-3):(ano_actual-1), each = 53), semana = rep(1:53, 3))
complet<- data.frame(ano = rep(ano_actual,semanax),semana = seq(1:semanax))
complet2 <- rbind(complet1, complet)
y2 <- merge(y, complet2, by =c('ano','semana'), all.y=T) %>%
mutate(n = ifelse(is.na(n), 0, n)) %>%
pivot_wider(names_from = ano, values_from = n)
colnames(y2) <- c('semana','a','b','c','d')
g2 <- y2 %>%
e_charts(semana) %>%
e_line(a, name = as.character(ano_actual-3), lineStyle = list(width = 3)) %>%
e_line(b, name = as.character(ano_actual-2), lineStyle = list(width = 3)) %>%
e_line(c, name = as.character(ano_actual-1), lineStyle = list(width = 3)) %>%
e_bar(d, name = as.character(ano_actual)) %>%
e_x_axis(name='Semana', min = min(1), max = 53, splitLine =list(show =F), interval = 2) %>%
e_tooltip(trigger = "axis") %>%
e_title(text = paste0('Número de Casos de ',enfer,' por semana, ',name_depar,' ',ano_actual-3,'-',ano_actual,'*'),
subtext = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control de Enfermedades - MINSA. \n(*) Hasta la SE ',
semana,' del ',ano_actual)) %>%
e_y_axis(name='N° de casos', nameLocation = 'center', nameTextStyle = list(lineHeight = 80, fontSize = 14)) %>%
e_legend(bottom = '0%') %>%
e_toolbox_feature(feature = "dataView") %>%
e_theme_custom('{"color":["#5C4B51","#8CBEB2","#F3B562","#F06060"]}') %>%
e_toolbox_feature(
feature = "saveAsImage",
title = "Descargar",
name = paste0('Número de Casos de ',enfer,' por semana, ',name_depar,' ')
)
return(g2)
}
MapFallecidos <- function(x, name_dep = selec_depa, shp =dis, semanax = semana, tipo = 'acumulado') {
#x <- data_meta
if (tipo=='acumulado') {
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P', ano_def == ano_actual, semana <= semanax, departamento==name_dep ) %>%
count(departamento, provincia, distrito)
tit <- paste0('Fallecidos por ',enfer,' por distrito, \n',name_dep,' ',ano_actual,'*')
} else {
if (semanax >= 7) { sem <- semanax-6  } else { sem <- semanax}
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P', ano_def == ano_actual, semana >= sem, departamento==name_dep ) %>%
count(departamento, provincia, distrito)
tit <- paste0('Fallecidos por ',enfer,' por distrito \n en las 6 ùltimas semanas, ',name_dep,' ',ano_actual,'*')
}
distrito <- shp %>%
filter(departamento == name_dep)
tab <- merge(distrito, y, by =c('departamento','provincia','distrito'), all.x=T) %>%
mutate(n = ifelse(is.na(n), 0, n))
if (max(tab$n) <= 6) {
tab <- tab %>%
mutate(n_grupo = case_when(
n %in% 0 ~ '0',
n %in% 1 ~ '1',
n %in% 2 ~ '2',
n %in% 3 ~ '3',
n %in% 4 ~ '4',
n %in% 5 ~ '5',
n %in% 6 ~ '6'
))
g =
ggplot(
data = tab,
aes(fill = n_grupo, tooltip = paste0(distrito,'\n',n) , data_id = distrito)
) +
geom_sf_interactive(size = 0.2) +
scale_fill_manual(values = c('white','#F2EBBF','#F3D29C','#F3B562','#F5995A','#F06060') ) +
labs(title = paste0('Distribución de casos de ',enfer,' por distrito, ',name_dep,' ',ano_actual,'*'),
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semana,' del ',ano_actual), fill = 'N° de fallecidos')+
theme_map()+
labs(title = tit,
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semana,' del ',ano_actual), fill = 'N° de casos')+
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 0.5),
legend.title = element_text(color = "black", size = 10))
}
if (max(tab$n) >= 7 ) {
g =
ggplot(
data = tab,
aes(fill = n, tooltip = paste0(distrito,'\n',n), data_id = distrito)
) +
geom_sf_interactive(size = 0.2) +
scale_fill_manual(values = c('white','#F2EBBF','#F3D29C','#F3B562','#F5995A','#F06060') ) +
labs(title = paste0('Distribución de casos de ',enfer,' por distrito, ',name_dep,' ',ano_actual,'*'),
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semana,' del ',ano_actual), fill = 'N° de fallecidos')+
theme_map()+
labs(title = tit,
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semana,' del ',ano_actual), fill = 'N° de casos')+
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 0.5),
legend.title = element_text(color = "black", size = 10))
}
# girafe
tooltip_css = "background-color:gray;color:white;padding:10px;border-radius:5px;"
t <- girafe(
ggobj = g,
options = list(
opts_hover_inv(css = 'opacity:0.9;'),
opts_tooltip(css = tooltip_css),
opts_zoom(max = 5),
opts_sizing(rescale = TRUE, width = 0.9)
),
width_svg = 7, height_svg = 7
)
return(t)
}
MapAcumPro(data_zoo, selec_depa, tipo='acumulado', dis)
MapaInciPro(data_zoo, selec_depa, tipo='acumulado', dis)
MapFallecidos(data_zoo, tipo='acumulado')
MapAcumPro(data_zoo, selec_depa, tipo='', dis)
MapaInciPro(data_zoo, selec_depa, tipo='', dis)
MapFallecidos(data_zoo, tipo='')
shp=dis
semanax = semana
tipo='acumulado'
x <- data_zoo
tipo <- ''
if (tipo=='acumulado') {
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P', ano == ano_actual, semana <= semanax, departamento==name_dep ) %>%
count(departamento, provincia, distrito)
titlex <- paste0('Casos acumulados de ',enfer,' por distritos,\n',name_dep,' ',ano_actual,'*')
} else {
if (semanax >= 7) { sem <- semanax-6  } else { sem <- semanax}
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P', ano == ano_actual-1, semana >= sem, departamento==name_dep ) %>%
count(departamento, provincia, distrito)
titlex <- paste0('Casos acumulados de ',enfer,' por distritos\nen las últimas 6 semanas, ',name_dep,' ',ano_actual,'*')
}
distrito <- shp %>%
filter(departamento == name_dep)
tab <- merge(distrito, y, by =c('departamento','provincia','distrito'), all.x=T) %>%
mutate(n = ifelse(is.na(n), 0, n))
max(tab$n)
if (max(tab$n) <= 6) {
tab <- tab %>%
mutate(n_grupo = case_when(
n %in% 0 ~ '0',
n %in% 1 ~ '1',
n %in% 2 ~ '2',
n %in% 3 ~ '3',
n %in% 4 ~ '4',
n %in% 5 ~ '5',
n %in% 6 ~ '6'
))
g =
ggplot(
data = tab,
aes(fill = n_grupo, tooltip = paste0(distrito,'\n',n) , data_id = distrito)
) +
geom_sf_interactive(size = 0.2) +
scale_fill_manual(values = c('white','#F2EBBF','#DBD9A2','#8CBEB2','#70858D','#5C4B51')) +
theme_map()+
labs(title = titlex,
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semanax,' del ',ano_actual), fill = 'N° de casos')+
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 0.5),
legend.title = element_text(color = "black", size = 10))
}
if (max(tab$n) >= 7 ) {
g =
ggplot(
data = tab,
aes(fill = n, tooltip = paste0(distrito,'\n',n), data_id = distrito)
) +
geom_sf_interactive(size = 0.2) +
scale_fill_manual(values = c('white','#F2EBBF','#DBD9A2','#8CBEB2','#70858D','#5C4B51')) +
theme_map()+
labs(title = titlex,
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semanax,' del ',ano_actual), fill = 'N° de casos')+
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 0.5),
legend.title = element_text(color = "black", size = 10))
}
# girafe
tooltip_css = "background-color:gray;color:white;padding:10px;border-radius:5px;"
g
g =
ggplot(
data = tab,
aes(fill = n, tooltip = paste0(distrito,'\n',n), data_id = distrito)
) +
geom_sf_interactive(size = 0.2) +
scale_fill_gradientn(colours = c("#F2EBBF", "#8CBEB2","#5C4B51"), na.value = 'white')+
theme_map()+
labs(title = titlex,
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semanax,' del ',ano_actual), fill = 'N° de casos')+
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 0.5),
legend.title = element_text(color = "black", size = 10))
g
g =
ggplot(
data = tab %>% mutate(n = ifelse( n== 0, NA, n)),
aes(fill = n, tooltip = paste0(distrito,'\n',n), data_id = distrito)
) +
geom_sf_interactive(size = 0.2) +
scale_fill_gradientn(colours = c("#F2EBBF", "#8CBEB2","#5C4B51"), na.value = 'white')+
theme_map()+
labs(title = titlex,
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semanax,' del ',ano_actual), fill = 'N° de casos')+
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 0.5),
legend.title = element_text(color = "black", size = 10))
g
library(dplyr)
library(ggplot2)
library(flexdashboard)
library(DT)
library(sf)
library(tidyr)
library(sparkline)
library(leaflet)
library(leaflet.extras)
library(RColorBrewer)
library(echarts4r)
library(data.table)
library(ggiraph)
library(cowplot)
library(readxl)
library(plotly)
library(lubridate)
library(aweek)
zoo <- readRDS('D:/CDC/analisis/sala_situacional/zoonosis/data_zoo/zoonosis.rds') %>%
mutate(grupo_edad = case_when(
edad %in% seq(0,11) ~ 'Niños (0 - 11 años)',
edad %in% seq(12,17) ~ 'Adolecentes (12 - 17 años)',
edad %in% seq(18, 29) ~ 'Joven (18 - 29 años)',
edad %in% seq(30, 59) ~ 'Adulto (30 - 59 años)',
edad %in% seq(60, 100) ~ 'Adulto mayor (60 + años)'
),
edad_quin = case_when(
between(edad, 0, 4) ~ '0 - 4 años',
between(edad, 5, 9) ~ '5 - 9 años',
between(edad, 10, 14) ~ '10 - 14 años',
between(edad, 15, 19) ~ '15 - 19 años',
between(edad, 20, 24) ~ '20 - 24 años',
between(edad, 25, 29) ~ '25 - 29 años',
between(edad, 30, 34) ~ '30 - 34 años',
between(edad, 35, 39) ~ '35 - 39 años',
between(edad, 40, 44) ~ '40 - 44 años',
between(edad, 45, 49) ~ '45 - 49 años',
between(edad, 50, 54) ~ '50 - 54 años',
between(edad, 55, 59) ~ '55 - 59 años',
between(edad, 60, 64) ~ '60 - 64 años',
between(edad, 65, 69) ~ '65 - 69 años',
edad >= 70 ~ '70 a más')
) %>%
mutate(sem_def = week(fecha_def),
ano_def = year(fecha_def))
dep <- st_read('D:/CDC/analisis/sala_situacional/data/shp/DEPARTAMENTOS_EDIT4.shp', quiet = TRUE)
dis <- st_read("D:/CDC/analisis/sala_situacional/data/shp/DISTRITOS_EDIT3.shp", quiet = T) %>%
select(-IDDIST)
colnames(dis) <- c('departamento','provincia','distrito','geometry')
#poblacion del ultimo año
u_year <- read_excel("D:/CDC/analisis/sala_situacional/zoonosis/data_zoo/pob_edad_sexo_20.xlsx")
# poblacion del penultimo año
p_year <- read_excel("D:/CDC/analisis/sala_situacional/zoonosis/data_zoo/pob_edad_sexo_19.xlsx")
source('D:/CDC/analisis/sala_situacional/zoonosis/func_zoo.R', encoding = 'UTF-8')
#source('D:/CDC/analisis/sala_situacional/data_2020.R', encoding = 'UTF-8')
ano_actual <- year(Sys.Date())
semana <- zoo %>%
filter(ano== ano_actual) %>%
summarise(max(semana)) %>%
pull()
n_pobla <- 31237385
depas <- sort(c('LORETO','ICA','SAN MARTIN','MADRE DE DIOS','UCAYALI','JUNIN','TUMBES','CUSCO','AYACUCHO','LAMBAYEQUE',
'AMAZONAS','LIMA','LA LIBERTAD','PIURA','CAJAMARCA','PASCO','HUANUCO','PUNO','ANCASH','CALLAO',
'AREQUIPA','APURIMAC','HUANCAVELICA','TACNA','MOQUEGUA'))
dep <- st_read('D:/CDC/analisis/sala_situacional/data/shp/DEPARTAMENTOS_EDIT4.shp', quiet = TRUE)
dis <- st_read("D:/CDC/analisis/sala_situacional/data/shp/DISTRITOS_EDIT3.shp", quiet = T) %>%
select(-IDDIST)
colnames(dis) <- c('departamento','provincia','distrito','geometry')
#poblacion del ultimo año
u_year <- read_excel("D:/CDC/analisis/sala_situacional/metaxenicas/data_meta/pob_edad_sexo_20.xlsx")
# poblacion del penultimo año
p_year <- read_excel("D:/CDC/analisis/sala_situacional/metaxenicas/data_meta/pob_edad_sexo_20.xlsx")
enfer <- 'LOXOCELISMO'
data_zoo <- zoo %>%
filter(enfermedad_gen==enfer)
# Lista de departamentos
lis_dep <- data_zoo %>%
filter(tipo_dx == 'C' | tipo_dx == 'P', ano == ano_actual, departamento != '') %>%
count(departamento) %>%
arrange(-n) %>%
distinct(departamento) %>%
select(departamento) %>%
pull()
lis_dep <- lis_dep[1]
MapaInciPro(data_zoo, selec_depa, tipo='acumulado', dis)
MapaInciPro <- function(x, name_dep = selec_depa, datafile = file, shp_dis = dis, tipo, semanax = semana, data_pobla = u_year){
# x <- data_zoo
# datafile <- file
#data_pobla <- u_year
# shp_dis = dis
# tipo = 'acumulado'
# name_dep <- selec_depa
if (tipo =='acumulado') {
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P', departamento != '', ano ==ano_actual, departamento == name_dep)
titlex <- 'TIA x 100mil Hab.'
tit <- paste0('Incidencia de ',enfer,' por distrito, \n',name_dep,' ',ano_actual,'*')
z <- data_pobla[3:nrow(data_pobla),c(1,2,5)]
colnames(z) <- c('ubigeo','departamento','pobla')
z <- z %>% select(-departamento)
} else {
if (semanax >= 7) { sem <- semanax-6  } else { sem <- semanax}
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P', departamento != '', ano ==ano_actual, semana == sem, departamento == name_dep)
titlex <- 'TIA x 100mil Hab.'
tit <- paste0('Incidencia de ',enfer,' por distrito\nen las últimas 6 semanas, ',name_dep,' ',ano_actual,'*')
z <- data_pobla[3:nrow(data_pobla),c(1,2,5)]
colnames(z) <- c('ubigeo','departamento','pobla')
z <- z %>% filter(departamento == name_dep) %>% select(-departamento)
}
y <- y %>%
count(ubigeo, departamento, provincia, distrito)
yz <- merge(z, y , by = c('ubigeo'), all.y=T) %>%
mutate(pobla = as.numeric(pobla),
TIA = ifelse(!is.na(n), round(n/pobla*100000,2) ,NA)) %>%
select(-pobla, -n, -ubigeo)
shp_dis <- shp_dis %>%
filter(departamento == name_dep)
tab_shp <- merge(shp_dis, yz, by = c('departamento','provincia','distrito'), all.x=T) %>%
mutate( TIA = as.numeric(ifelse(is.na(TIA),0,TIA))) %>%
mutate(tia_grupo = ifelse(TIA==0,'a',ifelse(TIA > 0 & TIA <= 10, 'b', ifelse(TIA >10 & TIA <= 30, 'c','d'))))
g =
ggplot(
data = tab_shp,
aes(fill = factor(tia_grupo), tooltip = paste0(distrito,'\n',TIA,' x 100mil Hab.'), data_id = distrito)
) +
geom_sf_interactive(size = 0.2) +
scale_fill_manual(values = c('white','#8CBEB2','#F3B562','#F06060'), breaks = c('a','b','c','d'),
labels =c('Sin casos','0.01 - 9.99','10 - 29.99','30 a más'), name =titlex) +
labs(title = tit,
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semana,' del ',ano_actual), fill = 'TIA x100 mil hab.')+
theme_map()+
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 0.5),
legend.title = element_text(color = "black", size = 10))
# girafe
tooltip_css = "background-color:gray;color:white;padding:10px;border-radius:5px;"
t <- girafe(
ggobj = g,
options = list(
opts_hover_inv(css = 'opacity:0.9;'),
opts_tooltip(css = tooltip_css),
opts_zoom(max = 5),
opts_sizing(rescale = TRUE, width = 0.95)
),
width_svg = 7, height_svg = 7
)
#t
return(t)
}
MapaInciPro(data_zoo, selec_depa, tipo='acumulado', dis)
MapaInciPro(data_zoo, selec_depa, tipo='acumulado', dis)
x <- data_zoo
datafile <- file
data_pobla <- u_year
shp_dis = dis
tipo = 'acumulado'
name_dep <- selec_depa
selec_depa
selec_depa <- lis_dep
selec_depa
x <- data_zoo
datafile <- file
data_pobla <- u_year
shp_dis = dis
tipo = 'acumulado'
name_dep <- selec_depa
if (tipo =='acumulado') {
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P', departamento != '', ano ==ano_actual, departamento == name_dep)
titlex <- 'TIA x 100mil Hab.'
tit <- paste0('Incidencia de ',enfer,' por distrito, \n',name_dep,' ',ano_actual,'*')
z <- data_pobla[3:nrow(data_pobla),c(1,2,5)]
colnames(z) <- c('ubigeo','departamento','pobla')
z <- z %>% select(-departamento)
} else {
if (semanax >= 7) { sem <- semanax-6  } else { sem <- semanax}
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P', departamento != '', ano ==ano_actual, semana == sem, departamento == name_dep)
titlex <- 'TIA x 100mil Hab.'
tit <- paste0('Incidencia de ',enfer,' por distrito\nen las últimas 6 semanas, ',name_dep,' ',ano_actual,'*')
z <- data_pobla[3:nrow(data_pobla),c(1,2,5)]
colnames(z) <- c('ubigeo','departamento','pobla')
z <- z %>% filter(departamento == name_dep) %>% select(-departamento)
}
y <- y %>%
count(ubigeo, departamento, provincia, distrito)
yz <- merge(z, y , by = c('ubigeo'), all.y=T) %>%
mutate(pobla = as.numeric(pobla),
TIA = ifelse(!is.na(n), round(n/pobla*100000,2) ,NA)) %>%
select(-pobla, -n, -ubigeo)
shp_dis <- shp_dis %>%
filter(departamento == name_dep)
tab_shp <- merge(shp_dis, yz, by = c('departamento','provincia','distrito'), all.x=T) %>%
mutate( TIA = as.numeric(ifelse(is.na(TIA),0,TIA))) %>%
mutate(tia_grupo = ifelse(TIA==0,'a',ifelse(TIA > 0 & TIA <= 10, 'b', ifelse(TIA >10 & TIA <= 30, 'c','d'))))
g =
ggplot(
data = tab_shp,
aes(fill = factor(tia_grupo), tooltip = paste0(distrito,'\n',TIA,' x 100mil Hab.'), data_id = distrito)
) +
geom_sf_interactive(size = 0.2) +
scale_fill_manual(values = c('white','#8CBEB2','#F3B562','#F06060'), breaks = c('a','b','c','d'),
labels =c('Sin casos','0.01 - 9.99','10 - 29.99','30 a más'), name =titlex) +
labs(title = tit,
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semana,' del ',ano_actual), fill = 'TIA x100 mil hab.')+
theme_map()+
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 0.5),
legend.title = element_text(color = "black", size = 10))
MapaInciPro <- function(x, name_dep = selec_depa, shp_dis = dis, tipo, semanax = semana, data_pobla = u_year){
# x <- data_zoo
# data_pobla <- u_year
# shp_dis = dis
# tipo = 'acumulado'
# name_dep <- selec_depa
if (tipo =='acumulado') {
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P', departamento != '', ano ==ano_actual, departamento == name_dep)
titlex <- 'TIA x 100mil Hab.'
tit <- paste0('Incidencia de ',enfer,' por distrito, \n',name_dep,' ',ano_actual,'*')
z <- data_pobla[3:nrow(data_pobla),c(1,2,5)]
colnames(z) <- c('ubigeo','departamento','pobla')
z <- z %>% select(-departamento)
} else {
if (semanax >= 7) { sem <- semanax-6  } else { sem <- semanax}
y <- x %>%
filter(tipo_dx=='C' | tipo_dx=='P', departamento != '', ano ==ano_actual, semana == sem, departamento == name_dep)
titlex <- 'TIA x 100mil Hab.'
tit <- paste0('Incidencia de ',enfer,' por distrito\nen las últimas 6 semanas, ',name_dep,' ',ano_actual,'*')
z <- data_pobla[3:nrow(data_pobla),c(1,2,5)]
colnames(z) <- c('ubigeo','departamento','pobla')
z <- z %>% filter(departamento == name_dep) %>% select(-departamento)
}
y <- y %>%
count(ubigeo, departamento, provincia, distrito)
yz <- merge(z, y , by = c('ubigeo'), all.y=T) %>%
mutate(pobla = as.numeric(pobla),
TIA = ifelse(!is.na(n), round(n/pobla*100000,2) ,NA)) %>%
select(-pobla, -n, -ubigeo)
shp_dis <- shp_dis %>%
filter(departamento == name_dep)
tab_shp <- merge(shp_dis, yz, by = c('departamento','provincia','distrito'), all.x=T) %>%
mutate( TIA = as.numeric(ifelse(is.na(TIA),0,TIA))) %>%
mutate(tia_grupo = ifelse(TIA==0,'a',ifelse(TIA > 0 & TIA <= 10, 'b', ifelse(TIA >10 & TIA <= 30, 'c','d'))))
g =
ggplot(
data = tab_shp,
aes(fill = factor(tia_grupo), tooltip = paste0(distrito,'\n',TIA,' x 100mil Hab.'), data_id = distrito)
) +
geom_sf_interactive(size = 0.2) +
scale_fill_manual(values = c('white','#8CBEB2','#F3B562','#F06060'), breaks = c('a','b','c','d'),
labels =c('Sin casos','0.01 - 9.99','10 - 29.99','30 a más'), name =titlex) +
labs(title = tit,
caption = paste0('Fuente: Centro Nacional de Epidemiología, Prevención y Control\nde Enfermedades - MINSA. (*) Hasta la SE ',
semana,' del ',ano_actual), fill = 'TIA x100 mil hab.')+
theme_map()+
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 0.5),
legend.title = element_text(color = "black", size = 10))
# girafe
tooltip_css = "background-color:gray;color:white;padding:10px;border-radius:5px;"
t <- girafe(
ggobj = g,
options = list(
opts_hover_inv(css = 'opacity:0.9;'),
opts_tooltip(css = tooltip_css),
opts_zoom(max = 5),
opts_sizing(rescale = TRUE, width = 0.95)
),
width_svg = 7, height_svg = 7
)
#t
return(t)
}
MapaInciPro(data_zoo, selec_depa, tipo='acumulado', dis)
remotes::install_github("gadenbuie/xaringanExtra")
install.packages("metathis")
setwd('D:/CDC/clases/BASICO_II/Intento1/')
ls -l
setwd('D:/CDC/clases/BASICO_II/Presentaciones_CDC_R/')
